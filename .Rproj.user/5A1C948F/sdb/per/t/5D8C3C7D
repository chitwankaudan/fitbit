{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(hms)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(corrplot)\n\n#####################################\n#### Sleep Data\n#####################################\n# Load raw data\nsleep <- read.csv(\"./data/raw_sleepdata.csv\")\n# switching to military time so i dont have to worry abt am/pm\nsleep$Start.Time <- format(strptime(sleep$Start.Time, \"%Y-%m-%d %I:%M%p\"), format=\"%Y-%m-%d %H:%M\") \nsleep$End.Time <- format(strptime(sleep$End.Time, \"%Y-%m-%d %I:%M%p\"), format=\"%Y-%m-%d %H:%M\") \nhead(sleep)\ntail(sleep)\n# fix dtypes\nsleep$Minutes.REM.Sleep <- as.integer(sleep$Minutes.REM.Sleep)\nsleep$Minutes.Light.Sleep <- as.integer(sleep$Minutes.Light.Sleep)\nsleep$Minutes.Deep.Sleep <- as.integer(sleep$Minutes.Deep.Sleep)\n# add Quality = Minutes Asleep/Minutes in Bed\nsleep$Quality <- sleep$Minutes.Asleep/sleep$Time.in.Bed\n\n# Extract times\nsleep$Sleeptime <- hms::hms(second(sleep$Start.Time), minute(sleep$Start.Time), hour(sleep$Start.Time))\nsleep$Sleeptime <- as.POSIXct(sleep$Sleeptime)\nsleep$Waketime <- hms::hms(second(sleep$End.Time), minute(sleep$End.Time), hour(sleep$End.Time))\nsleep$Waketime <- as.POSIXct(sleep$Waketime)\n\n# Plot densities\nggplot(sleep, aes(Sleeptime)) + \n  geom_density(fill = \"orange\", alpha = 0.5) +\n  scale_x_datetime(labels=date_format(\"%H:%M AM\")) +\n  labs(y='Frequency', x='Sleep Time') + \n  ggtitle('Sleep Times Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(sleep, aes(Waketime)) + \n  geom_density(fill = \"blue\", alpha = 0.5) +\n  scale_x_datetime(labels=date_format(\"%H:%M AM\")) +\n  labs(y='Frequency', x='Wake Time') + \n  ggtitle('Wake Times Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Multimodal (aka the weekend effect)?\nggplot(sleep, aes(Time.in.Bed)) + \n  geom_density(fill = \"brown\", alpha = 0.5) +\n  labs(y='Frequency', x='Minutes In Bed') + \n  ggtitle('Minutes in Bed Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(sleep, aes(Minutes.Asleep)) + \n  geom_density(fill = \"green\", alpha = 0.5) +\n  labs(y='Frequency', x='Minutes Asleep') + \n  ggtitle('Minutes Asleep Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(sleep, aes(Minutes.Awake)) + \n  geom_density(fill = \"red\", alpha = 0.5) +\n  labs(y='Frequency', x='Minutes Awake') + \n  ggtitle('Minutes Awake Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(sleep, aes(Minutes.REM.Sleep)) + \n  geom_density(fill = \"purple\", alpha = 0.5) +\n  labs(y='Frequency', x='Minutes REM') + \n  ggtitle('Minutes REM Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(sleep, aes(Minutes.Light.Sleep)) + \n  geom_density(fill = \"purple\", alpha = 0.5) +\n  labs(y='Frequency', x='Minutes Light Sleep') + \n  ggtitle('Minutes Light Sleep Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(sleep, aes(Minutes.Deep.Sleep)) + \n  geom_density(fill = \"purple\", alpha = 0.5) +\n  labs(y='Frequency', x='Minutes Deep Sleep') + \n  ggtitle('Minutes Deep Sleep Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(sleep, aes(Quality)) + \n  geom_density(fill = \"yellow\", alpha = 0.5) +\n  labs(y='Frequency', x='Quality (Minutes Asleep/Time in Bed)') + \n  ggtitle('Quality of Sleep Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Correlation Plot\ncorrplot(cor(sleep[,c(3, 4, 5, 6, 7, 8, 9)]), type='upper', method=\"circle\")\n\n#####################################\n#### Activity Data\n#####################################\n# Load cleaned data\nactivity <- read.csv(\"./data/activitydata.csv\")\n# Drop floors\nactivity <- activity[,-5]\n# Fix dtypes\nactivity$Calories.Burned <- as.integer(gsub(\",\", \"\", activity$Calories.Burned))\nactivity$Steps <-  as.integer(gsub(\",\", \"\", activity$Steps))\nactivity$Minutes.Sedentary <- as.integer(gsub(\",\", \"\", activity$Minutes.Sedentary))\nactivity$Minutes.Lightly.Active <- as.integer(activity$Minutes.Lightly.Active)\nactivity$Minutes.Fairly.Active <- as.integer(activity$Minutes.Fairly.Active)\nactivity$Minutes.Very.Active <- as.integer(activity$Minutes.Very.Active)\nactivity$Activity.Calories <- as.integer(activity$Activity.Calories)\n# Convert to datetime\nactivity$Date <- format(strptime(activity$Date, \"%m/%d/%y\"), format=\"%Y-%m-%d\") \n# View data\nhead(activity)\ntail(activity)\n\n# Plot densities\nggplot(activity, aes(Calories.Burned)) + \n  geom_density(fill = \"red\", alpha = 0.5) +\n  labs(y='Frequency', x='Calories Burned') + \n  ggtitle('Calories Burned Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(activity, aes(Steps)) + \n  geom_density(fill = \"orange\", alpha = 0.5) +\n  labs(y='Frequency', x='Daily Steps') + \n  ggtitle('Daily Steps Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(activity, aes(Distance)) + \n  geom_density(fill = \"purple\", alpha = 0.5) +\n  labs(y='Frequency', x='Daily Distance Travelled') + \n  ggtitle('Daily Distance Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(activity, aes(Minutes.Sedentary)) + \n  geom_density(fill = \"yellow\", alpha = 0.5) +\n  labs(y='Frequency', x='Daily Minutes Sedentary') + \n  ggtitle('Daily Minutes Sedentary Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(activity, aes(Minutes.Lightly.Active)) + \n  geom_density(fill = \"yellow\", alpha = 0.5) +\n  labs(y='Frequency', x='Daily Minutes Lightly Active') + \n  ggtitle('Daily Lightly Active Minutes Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(activity, aes(Minutes.Very.Active)) + \n  geom_density(fill = \"yellow\", alpha = 0.5) +\n  labs(y='Frequency', x='Daily Minutes Very Active') + \n  ggtitle('Daily Very Active Minutes Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(activity, aes(Activity.Calories)) + \n  geom_density(fill = \"yellow\", alpha = 0.5) +\n  labs(y='Frequency', x='Daily Activity Calories Burned') + \n  ggtitle('Daily Activity Calories Burned Density Plot') +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Correlation Plot\ncorrplot(cor(activity[,-1]), type='upper', method=\"circle\")\n\n# Potential analysis ideas:\n# Fit curve to sleep time and wake times\n# - how to account for weekend effect\n# Run a regression to see if activity affects \n# - duration of sleep\n# - quality of sleep (Minutes Asleep/Time in Bed)?",
    "created" : 1587163576928.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4148754815",
    "id" : "5D8C3C7D",
    "lastKnownWriteTime" : 1587182388,
    "last_content_update" : 1587182388,
    "path" : "~/Documents/fibit/EDA.R",
    "project_path" : "EDA.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}